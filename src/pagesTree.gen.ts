/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as DefaultImport } from './pages/_default'
import { Route as AuthImport } from './pages/_auth'

// Create Virtual Routes

const DefaultIndexLazyImport = createFileRoute('/_default/')()
const DefaultAboutUsLazyImport = createFileRoute('/_default/about-us')()
const AuthDashboardLazyImport = createFileRoute('/_auth/dashboard')()

// Create/Update Routes

const DefaultRoute = DefaultImport.update({
  id: '/_default',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const DefaultIndexLazyRoute = DefaultIndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DefaultRoute,
} as any).lazy(() => import('./pages/_default.index.lazy').then((d) => d.Route))

const DefaultAboutUsLazyRoute = DefaultAboutUsLazyImport.update({
  id: '/about-us',
  path: '/about-us',
  getParentRoute: () => DefaultRoute,
} as any).lazy(() =>
  import('./pages/_default.about-us.lazy').then((d) => d.Route),
)

const AuthDashboardLazyRoute = AuthDashboardLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./pages/_auth.dashboard.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_default': {
      id: '/_default'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DefaultImport
      parentRoute: typeof rootRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardLazyImport
      parentRoute: typeof AuthImport
    }
    '/_default/about-us': {
      id: '/_default/about-us'
      path: '/about-us'
      fullPath: '/about-us'
      preLoaderRoute: typeof DefaultAboutUsLazyImport
      parentRoute: typeof DefaultImport
    }
    '/_default/': {
      id: '/_default/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DefaultIndexLazyImport
      parentRoute: typeof DefaultImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthDashboardLazyRoute: typeof AuthDashboardLazyRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthDashboardLazyRoute: AuthDashboardLazyRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface DefaultRouteChildren {
  DefaultAboutUsLazyRoute: typeof DefaultAboutUsLazyRoute
  DefaultIndexLazyRoute: typeof DefaultIndexLazyRoute
}

const DefaultRouteChildren: DefaultRouteChildren = {
  DefaultAboutUsLazyRoute: DefaultAboutUsLazyRoute,
  DefaultIndexLazyRoute: DefaultIndexLazyRoute,
}

const DefaultRouteWithChildren =
  DefaultRoute._addFileChildren(DefaultRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof DefaultRouteWithChildren
  '/dashboard': typeof AuthDashboardLazyRoute
  '/about-us': typeof DefaultAboutUsLazyRoute
  '/': typeof DefaultIndexLazyRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/dashboard': typeof AuthDashboardLazyRoute
  '/about-us': typeof DefaultAboutUsLazyRoute
  '/': typeof DefaultIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_default': typeof DefaultRouteWithChildren
  '/_auth/dashboard': typeof AuthDashboardLazyRoute
  '/_default/about-us': typeof DefaultAboutUsLazyRoute
  '/_default/': typeof DefaultIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/dashboard' | '/about-us' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/dashboard' | '/about-us' | '/'
  id:
    | '__root__'
    | '/_auth'
    | '/_default'
    | '/_auth/dashboard'
    | '/_default/about-us'
    | '/_default/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  DefaultRoute: typeof DefaultRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  DefaultRoute: DefaultRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_default"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/dashboard"
      ]
    },
    "/_default": {
      "filePath": "_default.tsx",
      "children": [
        "/_default/about-us",
        "/_default/"
      ]
    },
    "/_auth/dashboard": {
      "filePath": "_auth.dashboard.lazy.tsx",
      "parent": "/_auth"
    },
    "/_default/about-us": {
      "filePath": "_default.about-us.lazy.tsx",
      "parent": "/_default"
    },
    "/_default/": {
      "filePath": "_default.index.lazy.tsx",
      "parent": "/_default"
    }
  }
}
ROUTE_MANIFEST_END */
